<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UISlKUISlKUISlKUISlKUISlKUIX/9k=
</value>
  </data>
</root>